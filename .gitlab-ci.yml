stages:
  - test
  - build
  - deploy

run_tests:
  stage: test
  image: python:3.10-slim-buster
  before_script:
    - apt-get update -qq && apt-get install -y
    - pip install -r requirements.txt
    - chmod +x run_checks.sh
  script:
    - sh run_checks.sh

build_image:
  stage: build
  image: docker:20.10.22
  services:
    - docker:20.10.22-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: "ppyzel/zgdk"
    IMAGE_TAG: "0.1"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker buildx build --platform linux/arm64 -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  artifacts:
    paths:
      - docker-compose.yml
  only:
    - main

deploy_to_server:
  stage: deploy
  image: ubuntu:20.04
  services:
    - docker:20.10.22-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - apt-get update -qq && apt-get install -y openssh-client
    - eval $(ssh-agent -s)
    - cat "$SSH_PRIVATE_KEY" | ssh-add -
  script:
    - scp -o "StrictHostKeyChecking=no" docker-compose.yml ubuntu@$SERVER_IP:/opt/zgdk/
    - ssh -o "StrictHostKeyChecking=no" ubuntu@$SERVER_IP "sudo mkdir -p /opt/zgdk && cd /opt/zgdk && docker-compose pull && docker-compose down && docker-compose up -d"
  only:
    - main
