stages:
  - test
  - build
  - deploy

run_tests:
  stage: test
  image: python:3.10
  before_script:
    - apt-get update -qq && apt-get install -y 
    - pip install -r requirements.txt
  script:
    - pytest

build_image:
  stage: build
  image: docker:20.10.22
  services:
    - docker:20.10.22-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: "ppyzel/zgdk"
    IMAGE_TAG: "0.1"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy_to_server:
  stage: deploy
  image: ubuntu:20.04
  services:
    - docker:20.10.22-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - apt-get update -qq && apt-get install -y openssh-client
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
  script:
    - ssh -o "StrictHostKeyChecking=no" ubuntu@138.3.245.125 "cd $Projects/zgdk && docker run -d -e ZAGADKA_TOKEN="$ZAGADKA_TOKEN" ppyzel/zgdk:0.1"

  only:
    - main
